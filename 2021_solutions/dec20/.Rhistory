for (cell in x[3:3]){
if (chart[rownames(chart) == cell,colnames(chart) == site] == 0){
next
}
current <- summed[,summed$celltype == cell]
current <- current[,current$metastasis_site == "none" | current$metastasis_site == site]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
table <- data.frame(y$counts)
colnames(table) <-c(y$samples$Sample)
#head(table)
#table
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
rownames(deseq_meta) <- as.factor(deseq_meta[,1])
colnames(deseq_meta) <- c("Sample","tumor_type","sex")
#deseq_meta
# colnames(as.matrix(table))
# rownames(deseq_meta)
##NOTE Coefficient is the CONTROL --> negative log fold means INCREASED expression in metastatic sample
## Adjusted for this in volcano plots by adding negative sign in the aes() parameters
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design = ~ tumor_type, tidy = FALSE)
dds <- DESeq(dds)
deseq_res <- results(dds)
deseq_res <- data.frame(deseq_res[order(deseq_res$padj),])
#print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = paste(cell,site,sep = '_')))
# png(filename = paste(cell,site,"pval.png",sep = '_'))
# print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = paste(cell,site,sep = '_')))
# dev.off()
deseq_res$abs_lfc <- abs(deseq_res$log2FoldChange)
deseq_res$GeneID <- rownames(deseq_res)
deseq_res$Gene_Of_Interest <- deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2
deseq_res <- deseq_res[!is.na(deseq_res$GeneID),]
deseq_res$common_goi <- ifelse(deseq_res$Gene_Of_Interest %in% deseq_dge[[which(x == cell)]],2,ifelse(deseq_res$Gene_Of_Interest,1,0))
deseq_res$common_goi <- as.factor(deseq_res$common_goi)
print(deseq_dge[[which(x == cell)]])
test <- deseq_res$GeneID[deseq_res$common_goi != 0]
print(test[!is.na(test)])
# print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = common_goi))
#       + geom_point()
#       + scale_color_manual(values = c('0' = "grey", '1' = "blue", '2' = "red"))
#       + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none")
#       + geom_text(data = deseq_res[deseq_res$common_goi == 2 ,], aes(label = GeneID), size = 2, hjust = -0.1))
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$common_goi,], aes(label = GeneID), size = 2, hjust = -0.1))
#initial geom_text
## deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,]
#png(filename = paste(cell,site,"volcanoplot.png",sep = '_'))
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,], aes(label = GeneID), size = 2, hjust = -0.1))
#dev.off()
}
}
knitr::opts_chunk$set(echo = TRUE)
deseq_res$GeneID %in% deseq_dge[[which(x == cell)]]
knitr::opts_chunk$set(echo = TRUE)
library(DESeq2)
#current
#y$counts
cells <- c("Tcell","Bcell","Endothelial","Mast","Mono_Macro","MyoFibroblast","Prolif_Mono_Macro")
x <- c("Tcell","Endothelial","Mast","Mono_Macro")
sites <- unique(sce$metastasis_site)[2:5]
chart <- table(summed$celltype,summed$metastasis_site)
chart
## SELECTING CELL TYPE AND METASTATIC Site
for (site in sites){
for (cell in x[3:3]){
if (chart[rownames(chart) == cell,colnames(chart) == site] == 0){
next
}
current <- summed[,summed$celltype == cell]
current <- current[,current$metastasis_site == "none" | current$metastasis_site == site]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
table <- data.frame(y$counts)
colnames(table) <-c(y$samples$Sample)
#head(table)
#table
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
rownames(deseq_meta) <- as.factor(deseq_meta[,1])
colnames(deseq_meta) <- c("Sample","tumor_type","sex")
#deseq_meta
# colnames(as.matrix(table))
# rownames(deseq_meta)
##NOTE Coefficient is the CONTROL --> negative log fold means INCREASED expression in metastatic sample
## Adjusted for this in volcano plots by adding negative sign in the aes() parameters
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design = ~ tumor_type, tidy = FALSE)
dds <- DESeq(dds)
deseq_res <- results(dds)
deseq_res <- data.frame(deseq_res[order(deseq_res$padj),])
#print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = paste(cell,site,sep = '_')))
# png(filename = paste(cell,site,"pval.png",sep = '_'))
# print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = paste(cell,site,sep = '_')))
# dev.off()
deseq_res$abs_lfc <- abs(deseq_res$log2FoldChange)
deseq_res$GeneID <- rownames(deseq_res)
deseq_res$Gene_Of_Interest <- deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2
deseq_res <- deseq_res[!is.na(deseq_res$GeneID),]
deseq_res$common_goi <- ifelse(deseq_res$GeneID %in% deseq_dge[[which(x == cell)]],2,ifelse(deseq_res$Gene_Of_Interest,1,0))
deseq_res$common_goi <- as.factor(deseq_res$common_goi)
print(deseq_dge[[which(x == cell)]])
test <- deseq_res$GeneID[deseq_res$common_goi != 0]
print(test[!is.na(test)])
# print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = common_goi))
#       + geom_point()
#       + scale_color_manual(values = c('0' = "grey", '1' = "blue", '2' = "red"))
#       + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none")
#       + geom_text(data = deseq_res[deseq_res$common_goi == 2 ,], aes(label = GeneID), size = 2, hjust = -0.1))
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$common_goi,], aes(label = GeneID), size = 2, hjust = -0.1))
#initial geom_text
## deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,]
#png(filename = paste(cell,site,"volcanoplot.png",sep = '_'))
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,], aes(label = GeneID), size = 2, hjust = -0.1))
#dev.off()
}
}
knitr::opts_chunk$set(echo = TRUE)
library(DESeq2)
#current
#y$counts
cells <- c("Tcell","Bcell","Endothelial","Mast","Mono_Macro","MyoFibroblast","Prolif_Mono_Macro")
x <- c("Tcell","Endothelial","Mast","Mono_Macro")
sites <- unique(sce$metastasis_site)[2:5]
chart <- table(summed$celltype,summed$metastasis_site)
chart
## SELECTING CELL TYPE AND METASTATIC Site
for (site in sites){
for (cell in x){
if (chart[rownames(chart) == cell,colnames(chart) == site] == 0){
next
}
current <- summed[,summed$celltype == cell]
current <- current[,current$metastasis_site == "none" | current$metastasis_site == site]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
table <- data.frame(y$counts)
colnames(table) <-c(y$samples$Sample)
#head(table)
#table
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
rownames(deseq_meta) <- as.factor(deseq_meta[,1])
colnames(deseq_meta) <- c("Sample","tumor_type","sex")
#deseq_meta
# colnames(as.matrix(table))
# rownames(deseq_meta)
##NOTE Coefficient is the CONTROL --> negative log fold means INCREASED expression in metastatic sample
## Adjusted for this in volcano plots by adding negative sign in the aes() parameters
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design = ~ tumor_type, tidy = FALSE)
dds <- DESeq(dds)
deseq_res <- results(dds)
deseq_res <- data.frame(deseq_res[order(deseq_res$padj),])
#print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = paste(cell,site,sep = '_')))
# png(filename = paste(cell,site,"pval.png",sep = '_'))
# print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = paste(cell,site,sep = '_')))
# dev.off()
deseq_res$abs_lfc <- abs(deseq_res$log2FoldChange)
deseq_res$GeneID <- rownames(deseq_res)
deseq_res$Gene_Of_Interest <- deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2
deseq_res <- deseq_res[!is.na(deseq_res$GeneID),]
deseq_res$common_goi <- ifelse(deseq_res$GeneID %in% deseq_dge[[which(x == cell)]],2,ifelse(deseq_res$Gene_Of_Interest,1,0))
deseq_res$common_goi <- as.factor(deseq_res$common_goi)
print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = common_goi))
+ geom_point()
+ scale_color_manual(values = c('0' = "grey", '1' = "blue", '2' = "red"))
+ labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none")
+ geom_text(data = deseq_res[deseq_res$common_goi == 2 ,], aes(label = GeneID), size = 2, hjust = -0.1))
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$common_goi,], aes(label = GeneID), size = 2, hjust = -0.1))
#initial geom_text
## deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,]
#png(filename = paste(cell,site,"volcanoplot.png",sep = '_'))
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,], aes(label = GeneID), size = 2, hjust = -0.1))
#dev.off()
}
}
knitr::opts_chunk$set(echo = TRUE)
library(DESeq2)
#current
#y$counts
cells <- c("Tcell","Bcell","Endothelial","Mast","Mono_Macro","MyoFibroblast","Prolif_Mono_Macro")
x <- c("Tcell","Endothelial","Mast","Mono_Macro")
sites <- unique(sce$metastasis_site)[2:5]
chart <- table(summed$celltype,summed$metastasis_site)
chart
## SELECTING CELL TYPE AND METASTATIC Site
for (site in sites){
for (cell in x){
if (chart[rownames(chart) == cell,colnames(chart) == site] == 0){
next
}
current <- summed[,summed$celltype == cell]
current <- current[,current$metastasis_site == "none" | current$metastasis_site == site]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
table <- data.frame(y$counts)
colnames(table) <-c(y$samples$Sample)
#head(table)
#table
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
rownames(deseq_meta) <- as.factor(deseq_meta[,1])
colnames(deseq_meta) <- c("Sample","tumor_type","sex")
#deseq_meta
# colnames(as.matrix(table))
# rownames(deseq_meta)
##NOTE Coefficient is the CONTROL --> negative log fold means INCREASED expression in metastatic sample
## Adjusted for this in volcano plots by adding negative sign in the aes() parameters
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design = ~ tumor_type, tidy = FALSE)
dds <- DESeq(dds)
deseq_res <- results(dds)
deseq_res <- data.frame(deseq_res[order(deseq_res$padj),])
#print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = paste(cell,site,sep = '_')))
# png(filename = paste(cell,site,"pval.png",sep = '_'))
# print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = paste(cell,site,sep = '_')))
# dev.off()
deseq_res$abs_lfc <- abs(deseq_res$log2FoldChange)
deseq_res$GeneID <- rownames(deseq_res)
deseq_res$Gene_Of_Interest <- deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2
deseq_res <- deseq_res[!is.na(deseq_res$GeneID),]
deseq_res$common_goi <- ifelse(deseq_res$Gene_Of_Interest & (deseq_res$GeneID %in% deseq_dge[[which(x == cell)]]),2,ifelse(deseq_res$Gene_Of_Interest,1,0))
deseq_res$common_goi <- as.factor(deseq_res$common_goi)
print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = common_goi))
+ geom_point()
+ scale_color_manual(values = c('0' = "grey", '1' = "blue", '2' = "red"))
+ labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none")
+ geom_text(data = deseq_res[deseq_res$common_goi == 2 ,], aes(label = GeneID), size = 2, hjust = -0.1))
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$common_goi,], aes(label = GeneID), size = 2, hjust = -0.1))
#initial geom_text
## deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,]
#png(filename = paste(cell,site,"volcanoplot.png",sep = '_'))
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,], aes(label = GeneID), size = 2, hjust = -0.1))
#dev.off()
}
}
knitr::opts_chunk$set(echo = TRUE)
library(DESeq2)
#current
#y$counts
cells <- c("Tcell","Bcell","Endothelial","Mast","Mono_Macro","MyoFibroblast","Prolif_Mono_Macro")
x <- c("Tcell","Endothelial","Mast","Mono_Macro")
sites <- unique(sce$metastasis_site)[2:5]
chart <- table(summed$celltype,summed$metastasis_site)
chart
## SELECTING CELL TYPE AND METASTATIC Site
for (site in sites){
for (cell in x){
if (chart[rownames(chart) == cell,colnames(chart) == site] == 0){
next
}
current <- summed[,summed$celltype == cell]
current <- current[,current$metastasis_site == "none" | current$metastasis_site == site]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
table <- data.frame(y$counts)
colnames(table) <-c(y$samples$Sample)
#head(table)
#table
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
rownames(deseq_meta) <- as.factor(deseq_meta[,1])
colnames(deseq_meta) <- c("Sample","tumor_type","sex")
#deseq_meta
# colnames(as.matrix(table))
# rownames(deseq_meta)
##NOTE Coefficient is the CONTROL --> negative log fold means INCREASED expression in metastatic sample
## Adjusted for this in volcano plots by adding negative sign in the aes() parameters
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design = ~ tumor_type, tidy = FALSE)
dds <- DESeq(dds)
deseq_res <- results(dds)
deseq_res <- data.frame(deseq_res[order(deseq_res$padj),])
#print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = paste(cell,site,sep = '_')))
# png(filename = paste(cell,site,"pval.png",sep = '_'))
# print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = paste(cell,site,sep = '_')))
# dev.off()
deseq_res$abs_lfc <- abs(deseq_res$log2FoldChange)
deseq_res$GeneID <- rownames(deseq_res)
deseq_res$Gene_Of_Interest <- deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2
deseq_res <- deseq_res[!is.na(deseq_res$GeneID),]
deseq_res$common_goi <- ifelse(deseq_res$Gene_Of_Interest & (deseq_res$GeneID %in% deseq_dge[[which(x == cell)]]),2,ifelse(deseq_res$Gene_Of_Interest,1,0))
deseq_res$common_goi <- as.factor(deseq_res$common_goi)
png(filename = paste(cell,site,"volcanoplot.png",sep = '_'))
print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = common_goi))
+ geom_point()
+ scale_color_manual(values = c('0' = "grey", '1' = "blue", '2' = "red"))
+ labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none")
+ geom_text(data = deseq_res[deseq_res$common_goi == 2 ,], aes(label = GeneID), size = 2, hjust = -0.1))
dev.off()
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$common_goi,], aes(label = GeneID), size = 2, hjust = -0.1))
#initial geom_text
## deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,]
#png(filename = paste(cell,site,"volcanoplot.png",sep = '_'))
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot", cell,site, sep = " ") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,], aes(label = GeneID), size = 2, hjust = -0.1))
#dev.off()
}
}
save.image("C:/Users/User/OneDrive - McGill University/PhD-1/QLS_Rotation_1/early_analysis/.RData")
setwd("C:/Users/User/advent_of_code/dec20")
#Part 2
for (i in 1:50){
x <- ifelse(i%%2 == 0,'#','.')
#test <- enhance(test,algo,x)
}
#Part 2
for (i in 1:50){
x <- ifelse(i%%2 == 0,'#','.')
print(x)
#test <- enhance(test,algo,x)
}
##   Data Prep
input <- file("test.txt","r")
algo <- readLines(input,n = 1)
image <- readLines(input)
close(input)
image <- image[which(image != "")]
image <- matrix(data = image, nrow = length(image),ncol = 1)
image <- data.frame(t(sapply( image, function(a) unlist( strsplit( a, "" )))),row.names = NULL)
# Helper functions
sqr2bin <- function(x){
x[x == "."] <- "0"
x[x== "#"] <- "1"
return(paste(paste(x[1,],collapse = ''),paste(x[2,],collapse = ''),paste(x[3,],collapse = ''),collapse = '', sep = ''))
#out <- str_c(x)
#return(out)
}
bin2dec <- function(x){
dec <- 0
for (i in str_length(x):1){
dec <- dec + (2**(str_length(x)-i))*as.numeric(str_sub(x,i,i))
}
return(dec)
}
# Function 1
enlarge <- function(im,fill){
row <- nrow(im)
col <- ncol(im)
# Fill based on what the infinite region of image currently is
out <- data.frame(matrix(data = fill, nrow = row + 10, ncol = col + 10 ))
out[6:(row+5),6:(col+5)] <- im
return(out)
}
pixel_change <- function(im,r,c,algo){
pixels <- im[(r-1):(r+1),(c-1):(c+1)]
pixels <- sqr2bin(pixels)
#need to shift by one because R loooves indices that start by 1 instead of 0
i <- bin2dec(pixels) + 1
return(str_sub(algo,i,i))
}
enhance <- function(im,alg,fill = '.'){
#here: only enhance CURRENT pixels in input image (the infinite pixels is an excuse to make algorithm work)
#run it on dimensions of current image only (and their extremities)
#make a copy of grid to transfer algorith output to
rows <- nrow(im)
cols <- ncol(im)
big_frame <- enlarge(im,fill)
new_frame <- data.frame(big_frame) #apply changes to this graph
for (r in 4:(rows+7)){
for (c in 4:(cols+7)){
new_frame[r,c] <- pixel_change(big_frame,r,c,alg)
}
}
#Swap enables me to finish filling in the simulated infinite region of the image in my grid (region guaranteed to be composed entirely of the same pixel)
swap <- pixel_change(big_frame,2,2,algo)
new_frame[c(1:3,nrow(big_frame):(nrow(big_frame)-2)),] <- swap
new_frame[,c(1:3,ncol(big_frame):(ncol(big_frame)-2))] <- swap
return(new_frame)
}
#Part 1
im2 <- enhance(image,algo,'.')
im3 <- enhance(im2,algo,'#')
length(which(im3 == '#'))
### Solution to Day 20 Puzzle ###
library(tidyverse)
library(tictoc)
##   Data Prep
input <- file("test.txt","r")
algo <- readLines(input,n = 1)
image <- readLines(input)
close(input)
image <- image[which(image != "")]
image <- matrix(data = image, nrow = length(image),ncol = 1)
image <- data.frame(t(sapply( image, function(a) unlist( strsplit( a, "" )))),row.names = NULL)
# Helper functions
sqr2bin <- function(x){
x[x == "."] <- "0"
x[x== "#"] <- "1"
return(paste(paste(x[1,],collapse = ''),paste(x[2,],collapse = ''),paste(x[3,],collapse = ''),collapse = '', sep = ''))
#out <- str_c(x)
#return(out)
}
bin2dec <- function(x){
dec <- 0
for (i in str_length(x):1){
dec <- dec + (2**(str_length(x)-i))*as.numeric(str_sub(x,i,i))
}
return(dec)
}
# Function 1
enlarge <- function(im,fill){
row <- nrow(im)
col <- ncol(im)
# Fill based on what the infinite region of image currently is
out <- data.frame(matrix(data = fill, nrow = row + 10, ncol = col + 10 ))
out[6:(row+5),6:(col+5)] <- im
return(out)
}
pixel_change <- function(im,r,c,algo){
pixels <- im[(r-1):(r+1),(c-1):(c+1)]
pixels <- sqr2bin(pixels)
#need to shift by one because R loooves indices that start by 1 instead of 0
i <- bin2dec(pixels) + 1
return(str_sub(algo,i,i))
}
enhance <- function(im,alg,fill = '.'){
#here: only enhance CURRENT pixels in input image (the infinite pixels is an excuse to make algorithm work)
#run it on dimensions of current image only (and their extremities)
#make a copy of grid to transfer algorith output to
rows <- nrow(im)
cols <- ncol(im)
big_frame <- enlarge(im,fill)
new_frame <- data.frame(big_frame) #apply changes to this graph
for (r in 4:(rows+7)){
for (c in 4:(cols+7)){
new_frame[r,c] <- pixel_change(big_frame,r,c,alg)
}
}
#Swap enables me to finish filling in the simulated infinite region of the image in my grid (region guaranteed to be composed entirely of the same pixel)
swap <- pixel_change(big_frame,2,2,algo)
new_frame[c(1:3,nrow(big_frame):(nrow(big_frame)-2)),] <- swap
new_frame[,c(1:3,ncol(big_frame):(ncol(big_frame)-2))] <- swap
return(new_frame)
}
#Part 1
im2 <- enhance(image,algo,'.')
im3 <- enhance(im2,algo,'#')
length(which(im3 == '#'))
test <- image
#Part 2
for (i in 1:50){
x <- ifelse(i%%2 == 0,'#','.')
test <- enhance(test,algo,x)
}
length(which(test == "#"))
test <- image
test <- image
tic()
#Part 2
for (i in 1:50){
x <- ifelse(i%%2 == 0,'#','.')
test <- enhance(test,algo,x)
}
length(which(test == "#"))
toc()
test <- image
test
test <- image
tic()
#Part 2
for (i in 1:50){
x <- ifelse(i%%2 == 0,'#','.')
test <- enhance(test,algo,x)
}
length(which(test == "#"))
toc()
