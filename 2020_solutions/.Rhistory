head(table)
table[,2:8] <- lapply(table[,2:8],as.numeric)
library(DESeq2)
#current
#y$counts
table <- data.frame(cbind(rownames(y$counts),y$counts))
data.frame(y$counts)
#head(table)
#table <- data.frame(lapply(table,as.factor))
colnames(table) <-c("counts",y$samples$Sample)
head(table)
table[,2:8] <- lapply(table[,2:8],as.numeric)
head(table)
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
dds <- DESeqDataSet(countData=table,
colData=deseq_meta,
design=~tumor_type, tidy = TRUE)
deseq_meta
cell <- "Endothelial"
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
#group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups)#, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
#QLfit <- glmQLFit(DGE,design, robust = TRUE)
#qlf <- glmQLFTest(QLfit,coef= 2)
fit <- glmFit(DGE,design)
lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(lrt, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.05 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
ggplot(results, aes(x = PValue)) +geom_histogram()
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.05 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
output <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
#current$celltype
file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
file_name_all = paste(cell,"all_genes.csv", sep = "_")
write.csv(output, file = file_name_sig)
write.csv(results,file = file_name_all)
library(DESeq2)
#current
#y$counts
table <- data.frame(cbind(rownames(y$counts),y$counts))
data.frame(y$counts)
#head(table)
#table <- data.frame(lapply(table,as.factor))
colnames(table) <-c("counts",y$samples$Sample)
head(table)
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
dds <- DESeqDataSet(countData=table,
colData=deseq_meta,
design=~tumor_type, tidy = TRUE)
library(DESeq2)
#current
#y$counts
table <- data.frame(cbind(rownames(y$counts),y$counts))
data.frame(y$counts)
#head(table)
#table <- data.frame(lapply(table,as.factor))
colnames(table) <-c("counts",y$samples$Sample)
head(table)
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design=~tumor_type, tidy = TRUE)
library(DESeq2)
#current
#y$counts
table <- data.frame(cbind(rownames(y$counts),y$counts))
data.frame(y$counts)
#head(table)
#table <- data.frame(lapply(table,as.factor))
table[,2:8] <- lapply(table[,2:8]mas.numeric)
library(DESeq2)
#current
#y$counts
table <- data.frame(cbind(rownames(y$counts),y$counts))
data.frame(y$counts)
#head(table)
#table <- data.frame(lapply(table,as.factor))
table[,2:8] <- lapply(table[,2:8],as.numeric)
head(table)
library(DESeq2)
#current
#y$counts
table <- data.frame(cbind(rownames(y$counts),y$counts))
data.frame(y$counts)
head(table)
#table <- data.frame(lapply(table,as.factor))
table[,2:7] <- lapply(table[,2:7],as.numeric)
colnames(table) <-c("counts",y$samples$Sample)
head(table)
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design=~tumor_type, tidy = TRUE)
table(ifelse(table[,2:7] < 0, TRUE,FALSE))
library(DESeq2)
#current
#y$counts
table <- data.frame(cbind(rownames(y$counts),y$counts))
data.frame(y$counts)
head(table)
#table <- data.frame(lapply(table,as.factor))
table[,2:7] <- lapply(table[,2:7],as.numeric)
colnames(table) <-c("counts",y$samples$Sample)
head(table)
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
table(ifelse(table < 0, TRUE,FALSE))
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design=~tumor_type, tidy = TRUE)
library(DESeq2)
#current
#y$counts
table <- data.frame(cbind(rownames(y$counts),y$counts))
data.frame(y$counts)
head(table)
#table <- data.frame(lapply(table,as.factor))
table[,2:7] <- lapply(table[,2:7],as.numeric)
colnames(table) <-c("counts",y$samples$Sample)
head(table)
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
table(ifelse(table < 0, TRUE,FALSE))
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table[,-1]),
colData=deseq_meta,
design=~tumor_type, tidy = TRUE)
deseq_meta
head(table)
head(table)
deseq_meta
head(table)
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
table(ifelse(table < 0, TRUE,FALSE))
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table[,-1]),
colData=deseq_meta,
design=~tumor_type, tidy = TRUE)
#current
#y$counts
table <- data.frame(y$counts)
table
#current
#y$counts
table <- data.frame(y$counts)
colnames(table) <-c(y$samples$Sample)
head(table)
library(DESeq2)
#current
#y$counts
table <- data.frame(y$counts)
colnames(table) <-c(y$samples$Sample)
head(table)
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
table(ifelse(table < 0, TRUE,FALSE))
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design=~tumor_type, tidy = TRUE)
ncol(as.matrix(table)) == nrow(deseq_meta)
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design=~tumor_type, tidy = TRUE)
as.matrix(table)
colnames(as.matrix(table))
rownames(deseq_meta)
rownames(deseq_meta)
deseq_meta
rownames(deseq_meta) <- as.factor(deseq_meta[,1])
deseq_meta
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design=~tumor_type, tidy = TRUE)
colnames(as.matrix(table))
rownames(deseq_meta)
table(ifelse(table < 0, TRUE,FALSE))
library(DESeq2)
#current
#y$counts
table <- data.frame(y$counts)
colnames(table) <-c(y$samples$Sample)
head(table)
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
rownames(deseq_meta) <- as.factor(deseq_meta[,1])
colnames(as.matrix(table))
rownames(deseq_meta)
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design=~tumor_type, tidy = FALSE)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/User/OneDrive - McGill University/PhD-1/QLS_Rotation_1/early_analysis")
load("C:/Users/User/OneDrive - McGill University/PhD-1/QLS_Rotation_1/early_analysis/.RData")
library(scater)
library(scran)
library(SingleCellExperiment)
library(HDF5Array)
library(batchelor)
library(ggrepel)
library(dbscan)
library(Rcpp)
library(limma)
library(BiocManager)
library(AnnotationHub)
library(DESeq2)
library(patchwork)
library(miloR)
library(uwot)
library(org.Hs.eg.db)
library(EnsDb.Hsapiens.v86)
library(SingleR)
library(ensembldb)
library(Seurat)
library(DESeq2)
library(Matrix.utils)
library(DropletUtils)
#cell <- "Endothelial"
x <- c("Tcell","Bcell","Endothelial","Mast","Mono_Macro","MyoFibroblast","Prolif_Mono_Macro")
for (cell in x){
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
#group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups)#, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
#QLfit <- glmQLFit(DGE,design, robust = TRUE)
#qlf <- glmQLFTest(QLfit,coef= 2)
fit <- glmFit(DGE,design)
lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(lrt, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.05 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
png(filename = paste(cell,"_LRT_pval.png",sep = ''))
ggplot(results, aes(x = PValue)) +geom_histogram()
dev.off()
png(filename = paste(cell,"_LRT_volcano.png",sep = ''))
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.05 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
dev.off()
}
# output <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
# #current$celltype
# file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
# file_name_all = paste(cell,"all_genes.csv", sep = "_")
# write.csv(output, file = file_name_sig)
# write.csv(results,file = file_name_all)
library(DESeq2)
#current
#y$counts
x <- c("Tcell","Bcell","Endothelial","Mast","Mono_Macro","MyoFibroblast","Prolif_Mono_Macro")
## SELECTING CELL TYPE
for (cell in x){
current <- summed[,summed$celltype == cell]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
table <- data.frame(y$counts)
colnames(table) <-c(y$samples$Sample)
#head(table)
#table
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
rownames(deseq_meta) <- as.factor(deseq_meta[,1])
colnames(deseq_meta) <- c("Sample","tumor_type","sex")
#deseq_meta
# colnames(as.matrix(table))
# rownames(deseq_meta)
##NOTE Coefficient is the CONTROL --> negative log fold means INCREASED expression in metastatic sample
## Adjusted for this in volcano plots by adding negative sign in the aes() parameters
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design = ~ tumor_type, tidy = FALSE)
dds <- DESeq(dds)
deseq_res <- results(dds)
deseq_res <- data.frame(deseq_res[order(deseq_res$padj),])
#print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = cell))
png(filename = paste(cell,"_pval.png",sep = ''))
print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = cell))
dev.off()
deseq_res$abs_lfc <- abs(deseq_res$log2FoldChange)
deseq_res$GeneID <- rownames(deseq_res)
deseq_res$Gene_Of_Interest <- deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2
#print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,], aes(label = GeneID), size = 2, hjust = -0.1))
png(filename = paste(cell,"_volcanoplot.png",sep = ''))
print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,], aes(label = GeneID), size = 2, hjust = -0.1))
dev.off()
}
#cell <- "Endothelial"
x <- c("Tcell","Bcell","Endothelial","Mast","Mono_Macro","MyoFibroblast","Prolif_Mono_Macro")
for (cell in x){
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
#group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups)#, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
#QLfit <- glmQLFit(DGE,design, robust = TRUE)
#qlf <- glmQLFTest(QLfit,coef= 2)
fit <- glmFit(DGE,design)
lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(lrt, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.05 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
png(filename = paste(cell,"_LRT_pval.png",sep = ''))
print(ggplot(results, aes(x = PValue)) +geom_histogram())
dev.off()
png(filename = paste(cell,"_LRT_volcano.png",sep = ''))
print(ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.05 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1))
dev.off()
}
# output <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
# #current$celltype
# file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
# file_name_all = paste(cell,"all_genes.csv", sep = "_")
# write.csv(output, file = file_name_sig)
# write.csv(results,file = file_name_all)
library(DESeq2)
#current
#y$counts
x <- c("Tcell","Bcell","Endothelial","Mast","Mono_Macro","MyoFibroblast","Prolif_Mono_Macro")
## SELECTING CELL TYPE
for (cell in x){
current <- summed[,summed$celltype == cell]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
table <- data.frame(y$counts)
colnames(table) <-c(y$samples$Sample)
#head(table)
#table
deseq_meta <- cbind(y$samples$Sample,y$samples$tumor_type,y$samples$sex)
rownames(deseq_meta) <- as.factor(deseq_meta[,1])
colnames(deseq_meta) <- c("Sample","tumor_type","sex")
#deseq_meta
# colnames(as.matrix(table))
# rownames(deseq_meta)
##NOTE Coefficient is the CONTROL --> negative log fold means INCREASED expression in metastatic sample
## Adjusted for this in volcano plots by adding negative sign in the aes() parameters
dds <- DESeqDataSetFromMatrix(countData=as.matrix(table),
colData=deseq_meta,
design = ~ tumor_type, tidy = FALSE)
dds <- DESeq(dds)
deseq_res <- results(dds)
deseq_res <- data.frame(deseq_res[order(deseq_res$padj),])
# #print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = cell))
# png(filename = paste(cell,"_pval.png",sep = ''))
# print(ggplot(deseq_res, aes(x = pvalue)) +geom_histogram() +labs(title = cell))
# dev.off()
deseq_res$abs_lfc <- abs(deseq_res$log2FoldChange)
deseq_res$GeneID <- rownames(deseq_res)
deseq_res$Gene_Of_Interest <- deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2
# #print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,], aes(label = GeneID), size = 2, hjust = -0.1))
# png(filename = paste(cell,"_volcanoplot.png",sep = ''))
# print(ggplot(data = deseq_res, aes(x =-log2FoldChange, y = -log10(padj),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(P_adjust)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = deseq_res[deseq_res$padj < 0.05 & deseq_res$abs_lfc >= 2,], aes(label = GeneID), size = 2, hjust = -0.1))
# dev.off()
output <- deseq_res[deseq_res$abs_lfc >= 2 & deseq_res$padj < 0.05,]
file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
file_name_all = paste(cell,"all_genes.csv", sep = "_")
write.csv(output, file = file_name_sig)
write.csv(deseq_res,file = file_name_all)
}
save.image("C:/Users/User/OneDrive - McGill University/PhD-1/QLS_Rotation_1/early_analysis/.RData")
library(tidyverse)
setwd("C:/Users/User/advent_of_code/2020_solutions")
x <- read_file(file = "dec10.txt")
x
?read_file
x <- read_delim(file = "dec10.txt",)
x <- read_delim(file = "dec10.txt")
x <- read_delim(file = "dec10.txt", delim = '\n')
x
?read_delim
x
class(x)
data.frame(x)
x <- read.table(file = "dec10.txt", sep = '\n')
x
x <- x[order(x),]
order(x)
x <- x[order(x[1,]),]
order(x[1,])
order(x[1])
order(x[,1])
x[order(x[,1]),]
x <- read.table(file = "dec10.txt", sep = '\n')
x[order(x[,1]),]
x <- x[order(x[1,]),]
x
x <- read.table(file = "dec10.txt", sep = '\n')
x <- x[order(x[1,]),]
x <- read.table(file = "dec10.txt", sep = '\n')
x[order(x[,1]),]
x <- read.table(file = "dec10.txt", sep = '\n')
x <- x[order(x[,1]),]
x
c(x[2:length(x[,1]),1],0)
other <- c(x[2:length(x)],0)
diff <- other - x
length(diff[diff == 3])*length(diff[diff == 3])
length(diff[diff == 3])*length(diff[diff == 1])
length(diff[diff == 3])*length(diff[diff == 1])
length(diff[diff == 3])
length(diff[diff == 1])
x <- c(0,x,max(x)+3)
other <- c(x[2:length(x)],0)
diff <- other - x
length(diff[diff == 3])*length(diff[diff == 1])
x <- read.table(file = "dec10.txt", sep = '\n')
x <- x[order(x[,1]),]
x <- c(0,x,max(x)+3)
other <- c(x[2:length(x)],0)
diff <- other - x
length(diff[diff == 3])*length(diff[diff == 1])
