y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
#QLfit <- glmQLFit(DGE,design, robust = TRUE)
#qlf <- glmQLFTest(QLfit,coef= 2)
fit <- glmFit(DGE,design)
lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(lrt, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.05 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
ggplot(results, aes(x = PValue)) +geom_histogram()
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.05 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
output <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
#current$celltype
#file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
#file_name_all = paste(cell,"all_genes.csv", sep = "_")
#write.csv(output, file = file_name_sig)
#write.csv(results,file = file_name_all)
cell <- "Mast"
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
#QLfit <- glmQLFit(DGE,design, robust = TRUE)
#qlf <- glmQLFTest(QLfit,coef= 2)
fit <- glmFit(DGE,design)
lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(lrt, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.05 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
ggplot(results, aes(x = PValue)) +geom_histogram()
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.05 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
output <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
#current$celltype
#file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
#file_name_all = paste(cell,"all_genes.csv", sep = "_")
#write.csv(output, file = file_name_sig)
#write.csv(results,file = file_name_all)
cell <- "Mast"
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
QLfit <- glmQLFit(DGE,design, robust = TRUE)
qlf <- glmQLFTest(QLfit,coef= 2)
#fit <- glmFit(DGE,design)
#lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(qlf, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.05 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
ggplot(results, aes(x = PValue)) +geom_histogram()
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.05 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
output <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
#current$celltype
#file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
#file_name_all = paste(cell,"all_genes.csv", sep = "_")
#write.csv(output, file = file_name_sig)
#write.csv(results,file = file_name_all)
cell <- "Endothelial"
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
QLfit <- glmQLFit(DGE,design, robust = TRUE)
qlf <- glmQLFTest(QLfit,coef= 2)
#fit <- glmFit(DGE,design)
#lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(qlf, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.05 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
ggplot(results, aes(x = PValue)) +geom_histogram()
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.05 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
output <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
#current$celltype
#file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
#file_name_all = paste(cell,"all_genes.csv", sep = "_")
#write.csv(output, file = file_name_sig)
#write.csv(results,file = file_name_all)
cell <- "Tcell"
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
QLfit <- glmQLFit(DGE,design, robust = TRUE)
qlf <- glmQLFTest(QLfit,coef= 2)
#fit <- glmFit(DGE,design)
#lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(qlf, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.05 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
ggplot(results, aes(x = PValue)) +geom_histogram()
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.05 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
output <- results[results$FDR <= 0.05 & results$abs_logFC >= 2,]
#current$celltype
#file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
#file_name_all = paste(cell,"all_genes.csv", sep = "_")
#write.csv(output, file = file_name_sig)
#write.csv(results,file = file_name_all)
cell <- "Tcell"
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
QLfit <- glmQLFit(DGE,design, robust = TRUE)
qlf <- glmQLFTest(QLfit,coef= 2)
#fit <- glmFit(DGE,design)
#lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(qlf, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.1 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.1 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
ggplot(results, aes(x = PValue)) +geom_histogram()
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.1 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
output <- results[results$FDR <= 0.1 & results$abs_logFC >= 2,]
#current$celltype
#file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
#file_name_all = paste(cell,"all_genes.csv", sep = "_")
#write.csv(output, file = file_name_sig)
#write.csv(results,file = file_name_all)
cell <- "Endothelial"
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
QLfit <- glmQLFit(DGE,design, robust = TRUE)
qlf <- glmQLFTest(QLfit,coef= 2)
#fit <- glmFit(DGE,design)
#lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(qlf, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.1 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.1 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
ggplot(results, aes(x = PValue)) +geom_histogram()
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.1 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
output <- results[results$FDR <= 0.1 & results$abs_logFC >= 2,]
#current$celltype
#file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
#file_name_all = paste(cell,"all_genes.csv", sep = "_")
#write.csv(output, file = file_name_sig)
#write.csv(results,file = file_name_all)
cell <- "Endothelial"
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
#group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups)#, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
QLfit <- glmQLFit(DGE,design, robust = TRUE)
qlf <- glmQLFTest(QLfit,coef= 2)
#fit <- glmFit(DGE,design)
#lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(qlf, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.1 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.1 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
ggplot(results, aes(x = PValue)) +geom_histogram()
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.1 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
output <- results[results$FDR <= 0.1 & results$abs_logFC >= 2,]
#current$celltype
#file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
#file_name_all = paste(cell,"all_genes.csv", sep = "_")
#write.csv(output, file = file_name_sig)
#write.csv(results,file = file_name_all)
cell <- "Mast"
current <- summed[,summed$celltype == cell]# | summed$celltype == "Mono_Macro"]
#current$tumor_type
#counts(current)
y <- DGEList(counts(current), samples=colData(current),group=current$tumor_type)
#y$samples
discarded <- current$ncells < 10
y <- y[,!discarded]
#summary(discarded)
keep <- filterByExpr(y, group = current$tumor_type)
y <- y[keep,,keep.lib.sizes=FALSE]
#summary(keep)
y <- calcNormFactors(y)
#y$samples$lib.size
#y$samples
#group <- y$samples$group
pca <- prcomp(t(edgeR::cpm(y, normalized.lib.sizes  = TRUE, log = TRUE)))
##DGE LRT
DGE <- y
groups <- ifelse(y$samples$group == "primary", 0, 1)
#groups
design <- model.matrix(~groups)#, DGE$samples)
#design
DGE <- estimateDisp(DGE,design)
QLfit <- glmQLFit(DGE,design, robust = TRUE)
qlf <- glmQLFTest(QLfit,coef= 2)
#fit <- glmFit(DGE,design)
#lrt <- glmLRT(fit,coef=2)
#topTags(lrt)
all_results <- topTags(qlf, nrow(DGE$counts), sort.by = "PValue")
#all_results
results <- data.frame(all_results)
results$logFDR <- log10(results$FDR)
results$neg_logFDR <- -(results$logFDR)
results$abs_logFC <- abs(results$logFC)
results$GeneID <- row.names(results)
results$Gene_Of_Interest <-  results$FDR <= 0.1 & results$abs_logFC >= 2
#summary(results$Gene_Of_Interest)
results <- results[order(results$FDR),]
top_sig_genes <- results[results$FDR <= 0.1 & results$abs_logFC >= 2,]
results
head(top_sig_genes)
#top_sig_genes[top_sig_genes$Gene_Of_Interest == TRUE,]
ggplot(results, aes(x = PValue)) +geom_histogram()
ggplot(data = results, aes(x =logFC, y = -log10(FDR),color = Gene_Of_Interest)) + geom_point() + scale_color_manual(values = c("FALSE" = "grey", "TRUE" = "red")) + labs( x = "Log2(FC)", y = "-Log10(FDR)", title = paste("Volcano Plot ", cell, sep = "") ) + theme(legend.position = "none") + geom_text(data = results[results$FDR <= 0.1 & (abs(results$logFC) > 2),], aes(label = GeneID), size = 2, hjust = -0.1)
output <- results[results$FDR <= 0.1 & results$abs_logFC >= 2,]
#current$celltype
#file_name_sig = paste(cell,"sig_genes.csv", sep = "_")
#file_name_all = paste(cell,"all_genes.csv", sep = "_")
#write.csv(output, file = file_name_sig)
#write.csv(results,file = file_name_all)
save.image("C:/Users/User/OneDrive - McGill University/PhD-1/QLS_Rotation_1/early_analysis/.RData")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/User/OneDrive - McGill University/PhD-1/QLS_Rotation_1/early_analysis")
load("C:/Users/User/OneDrive - McGill University/PhD-1/QLS_Rotation_1/early_analysis/.RData")
library(scater)
library(scran)
library(SingleCellExperiment)
library(HDF5Array)
library(batchelor)
library(ggrepel)
library(dbscan)
library(Rcpp)
library(limma)
library(BiocManager)
library(AnnotationHub)
library(DESeq2)
library(patchwork)
library(miloR)
library(uwot)
library(org.Hs.eg.db)
library(EnsDb.Hsapiens.v86)
library(SingleR)
library(ensembldb)
library(Seurat)
library(DESeq2)
library(Matrix.utils)
library(DropletUtils)
## reducing metastatic samples to 3 for fair comparison
#new_sce <- sce[,substr(sce$Sample,9,9) == "P" | substr(sce$Sample,6,6) == "0" | substr(sce$Sample,6,6) == "1" | substr(sce$Sample,6,6) == "2" ]
#new_sce <- tcells
new_sce <- sce[,sce$group == "normal" & sce$snn_cluster != "1" & sce$snn_cluster != "3" & sce$snn_cluster != "11" & sce$snn_cluster != "6"]
#plotReducedDim(new_sce, dimred = "umap")
#table(new_sce$celltype)
new_sce <- runPCA(new_sce, ncomponents= 50)
## reducing metastatic samples to 3 for fair comparison
#new_sce <- sce[,substr(sce$Sample,9,9) == "P" | substr(sce$Sample,6,6) == "0" | substr(sce$Sample,6,6) == "1" | substr(sce$Sample,6,6) == "2" ]
#new_sce <- tcells
new_sce <- sce[,sce$group == "normal" & sce$snn_cluster != "1" & sce$snn_cluster != "3" & sce$snn_cluster != "11" & sce$snn_cluster != "6"]
#plotReducedDim(new_sce, dimred = "umap")
#table(new_sce$celltype)
new_sce <- runPCA(new_sce, ncomponents= 20)
milo_sce <- Milo(new_sce)
#milo_sce <- buildKNNGraph()
milo_sce <-buildGraph(milo_sce,k = 50, d = 5, reduced.dim = "PCA")
milo_sce <- makeNhoods(milo_sce, prop = 0.1, k = 50, d=5, refined = TRUE, reduced_dims = "PCA")
plotNhoodSizeHist(milo_sce)
milo_sce <- countCells(milo_sce, meta.data = as.data.frame(colData(milo_sce)), sample="Sample")
head(nhoodCounts(milo_sce))
#write.csv(nhoodCounts(milo_sce), file = "nhood_distribution.csv")
milo_design <- data.frame(colData(milo_sce ))[,c("Sample", "tumor_type")]
milo_design <- unique(milo_design)
rownames(milo_design) <- milo_design$Sample
milo_design <- distinct(milo_design)
save.image("C:/Users/User/OneDrive - McGill University/PhD-1/QLS_Rotation_1/early_analysis/.RData")
setwd("C:/Users/User/advent_of_code/dec3")
x <- read.table(pipe("awk '{gsub(\"\",\" \", $1);print $1}' test.txt"))
x
x
x
x <- read.table(pipe("awk '{gsub(\"\",\" \", $1);print $1}' test.txt"))
setwd("C:/Users/User/advent_of_code/dec3")
setwd("C:/Users/User/advent_of_code/dec3")
x <- read.table(pipe("awk '{gsub(\"\",\" \", $1);print $1}' test.txt"))
x
head(x)
